# -*- coding: utf-8 -*-
"""Dashboard Introduction streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SOkxyCc3J75nhKxKeNfXTrAahhcfRJMb

# Dashboards
"""

!pip install streamlit

#Example 1
import streamlit as st
import plotly.express as px
import pandas as pd

# Title of the app
st.title("Streamlit Dashboard with Plotly")

# Sample data
data = {
    "Category": ["A", "B", "C", "D"],
    "Values": [10, 20, 15, 25]
}
df = pd.DataFrame(data)

# Create a bar chart
fig = px.bar(df, x="Category", y="Values", title="Sample Bar Chart")

# Display the Plotly chart in Streamlit
st.plotly_chart(fig)

fig



#Example 2
import streamlit as st
import plotly.express as px
import pandas as pd

# Load Sample Data
df = px.data.gapminder()

# Title
st.title("Interactive Dashboard with Streamlit & Plotly")

# Select Year with Slider
year = st.slider("Select Year:", int(df["year"].min()), int(df["year"].max()), int(df["year"].min()))

# Filter Data
filtered_df = df[df.year == year]

# Create Plotly Scatter Plot
fig = px.scatter(filtered_df, x="gdpPercap", y="lifeExp", size="pop", color="continent",
                 hover_name="country", log_x=True, size_max=60)

# Display Plot
st.plotly_chart(fig)

# Example 3
import streamlit as st
import plotly.express as px
import pandas as pd

# Load Sample Data
df = px.data.gapminder()

# Streamlit App Title
st.title("ðŸ“Š Interactive Dashboard with Multiple Plots")

# Create a sidebar filter for selecting a year
selected_year = st.sidebar.slider("Select Year:", int(df["year"].min()), int(df["year"].max()), int(df["year"].min()))

# Filter data based on the selected year
filtered_df = df[df.year == selected_year]

# Create three different plots
fig1 = px.scatter(filtered_df, x="gdpPercap", y="lifeExp", size="pop", color="continent",
                  hover_name="country", log_x=True, size_max=60, title="Life Expectancy vs GDP")

fig2 = px.bar(filtered_df, x="continent", y="pop", color="continent", title="Population per Continent")

fig3 = px.line(filtered_df, x="country", y="gdpPercap", color="continent", title="GDP Per Capita by Country")

# Arrange the plots in a grid layout
col1, col2 = st.columns(2)  # Create 2 columns

with col1:
    st.plotly_chart(fig1, use_container_width=True)  # First plot in first column

with col2:
    st.plotly_chart(fig2, use_container_width=True)  # Second plot in second column

# Add the third plot in a full-width row below
st.plotly_chart(fig3, use_container_width=True)

# Example 4

import streamlit as st
import plotly.express as px
import pandas as pd

# Load Sample Data
df = px.data.gapminder()

# Streamlit App Title
st.title("ðŸ“Š Interactive Dashboard with Multiple Plots")

# Create a sidebar filter for selecting a year
selected_year = st.sidebar.slider("Select Year:", int(df["year"].min()), int(df["year"].max()), int(df["year"].min()))

# Filter data based on the selected year
filtered_df = df[df.year == selected_year]

# Create three different plots
fig1 = px.scatter(filtered_df, x="gdpPercap", y="lifeExp", size="pop", color="continent",
                  hover_name="country", log_x=True, size_max=60, title="Life Expectancy vs GDP")

fig2 = px.bar(filtered_df, x="continent", y="pop", color="continent", title="Population per Continent")

fig3 = px.line(filtered_df, x="country", y="gdpPercap", color="continent", title="GDP Per Capita by Country")

# Layout - Using Tabs to Display Multiple Plots
tab1, tab2, tab3 = st.tabs(["ðŸ“Œ Scatter Plot", "ðŸ“Š Bar Chart", "ðŸ“ˆ Line Chart"])

with tab1:
    st.plotly_chart(fig1, use_container_width=True)

with tab2:
    st.plotly_chart(fig2, use_container_width=True)

with tab3:
    st.plotly_chart(fig3, use_container_width=True)









import streamlit as st
import plotly.express as px
import pandas as pd

# Load Sample Data
df = px.data.gapminder()

# Streamlit App Title
st.title("ðŸ“Š Interactive Dashboard with Multiple Plots")

# Create a sidebar filter for selecting a year
selected_year = st.sidebar.slider("Select Year:", int(df["year"].min()), int(df["year"].max()), int(df["year"].min()))

# Filter data based on the selected year
filtered_df = df[df.year == selected_year]

# Create three different plots
fig1 = px.scatter(filtered_df, x="gdpPercap", y="lifeExp", size="pop", color="continent",
                  hover_name="country", log_x=True, size_max=60, title="Life Expectancy vs GDP")

fig2 = px.bar(filtered_df, x="continent", y="pop", color="continent", title="Population per Continent")

fig3 = px.line(filtered_df, x="country", y="gdpPercap", color="continent", title="GDP Per Capita by Country")

# Layout - Using Tabs to Display Multiple Plots
tab1, tab2, tab3 = st.tabs(["ðŸ“Œ Scatter Plot", "ðŸ“Š Bar Chart", "ðŸ“ˆ Line Chart"])

with tab1:
    st.plotly_chart(fig1, use_container_width=True)

with tab2:
    st.plotly_chart(fig2, use_container_width=True)

with tab3:
    st.plotly_chart(fig3, use_container_width=True)